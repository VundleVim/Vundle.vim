" vim -u test/vimrc
set nocompatible

let root = '/tmp/vundle_vundles/'
let src = 'http://github.com/gmarik/vundle.git'
" let src = '~/.vim/vundle/vundle/.git'

if !isdirectory(expand(root).'/vundle')
  exec '!git clone '.src.' '.root.'/vundle'
endif

filetype off
syntax on

runtime macros/matchit.vim

exec 'set rtp+='.root.'/vundle'

call vundle#rc(root)

Vundle "gmarik/vundle"

" vim-scripts name
Vundle 'molokai'

" github username with dashes
Vundle 'vim-scripts/ragtag.vim'

" original repo
Vundle 'altercation/vim-colors-solarized'
" with extension
Vundle 'nelstrom/vim-mac-classic-theme.git'
"
"  invalid uri
Vundle 'nonexistinguser/yupppierepo.git'

" full uri
Vundle 'https://github.com/vim-scripts/vim-game-of-life'
" full uri
Vundle 'git@github.com:gmarik/ingretu.git'
" short uri
Vundle 'gh:gmarik/snipmate.vim.git'
Vundle 'github:mattn/gist-vim.git'

" local uri stuff
Vundle '~/Dropbox/.gitrepos/utilz.vim.git'
" Vundle 'file://Dropbox/.gitrepos/utilz.vim.git'

" with options
Vundle 'rstacruz/sparkup.git', {'rtp': 'vim/'}

" Camel case
Vundle 'vim-scripts/RubySinatra'

filetype plugin indent on      " Automatically detect file types.

set wildignore+=doc              " should not break helptags
set wildignore+=.git             " should not break clone

VundleInstall

func! s:assert_vundles() abort
  for b in g:vundles
    if (!isdirectory(b.path().'/.git/'))
      throw b.name.' not installed'
    endif
  endfor
endf

call s:assert_vundles()
